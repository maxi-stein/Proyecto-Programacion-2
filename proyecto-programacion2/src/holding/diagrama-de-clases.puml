@startuml
class SistemaDeGestion{
+mostrarOpciones() : Integer
}

class BaseDatosHolding{
-autentificarUsuario(String,String) : Boolean
+iniciarSesion() : void
}

abstract Usuario{
-codigoUsuario : Integer
-nombre : String
-direccion : String
-pass : String
}

class Vendedor extends Usuario{
    -nombre : String
    -direccion : String
    -fechaCaptado : Date
    +Vendedor(String,String,String,Date)
    +captarVendedor(Vendedor) : Void
    +contadorVendedoresCapt() : Integer
}

class Empresa{
    -nombre : String
    -fechaEntrada : Date
    -facturacionAnual : Double

}

enum  AREAS_MERCADO <<enum>> {
    -Ingenieria
    -Construccion
    -Energia
    -Mineria
    -Salud

    -descripcion : String

    -AREAS_MERCADO(String)
    +getDescripcion() : void

}

class Pais{
    -nombre : String
    -pbi : Double
    -numHabitantes : double
    -esSede : Boolean

    +Pais(String,double,double)
    +hacerSede() : void
    -eliminarSede() : void
}

class Ciudad{
    -nombre: String
    -desarrollaActividad : Boolean
    -esSede : Boolean

    +hacerSede() : void
    -eliminarSede() : void
}

interface ISede <<interface>>{
    -esSede : Boolean
    +hacerSede() : void
    -eliminarSede() : void
}

class Asesor extends Usuario{
-nombre : String
-direccion : String
-titulacion : String
-fechaInicio : Date
+asesorarEmpresa(Empresa)
+cubrirAreaMercado(AREAS_MERCADO) : void
}

class Admin extends Usuario{
-nombre : String
-direccion : String
-fechaInicio : Date
+crearVendedor() : void
+crearAsesor() : void
+crearEmpresa(): void
+crearPais() : void

}


SistemaDeGestion -. BaseDatosHolding
BaseDatosHolding --> "*"Usuario : usuarios
BaseDatosHolding -. Empresa
Vendedor "*"<-- "1" Empresa : empresaTrabajo
Vendedor -> "*" Vendedor : vendedoresCaptados
Empresa "1"--> "*" AREAS_MERCADO : areasMercado
Empresa "*" --> "*" Pais : ubicaciones
Pais -> "*" Ciudad : ciudades
Pais -.> ISede
Ciudad -.> ISede
Asesor "*"--> "*" AREAS_MERCADO : mercadosCubiertos
Asesor "*" --> "*" Empresa : empresasAsesoradas


@enduml